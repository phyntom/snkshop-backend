{"version":3,"sources":["components/Footer.js","utils/persistStorage.js","context/CartReducer.js","context/StoreContext.js","context/CartContext.js","components/Header.js","components/Rating.js","components/Product.js","components/Paginator.js","components/Steps.js","pages/HomePage.js","pages/ProductPage.js","components/Message.js","pages/CartPage.js","components/FormContainer.js","pages/LoginPage.js","pages/Register.js","pages/Profile.js","components/ProtectedRoute.js","pages/ShippingPage.js","utils/Formater.js","pages/CreateOrderPage.js","components/Loader.js","pages/OrderPage.js","App.js","serviceWorker.js","index.js"],"names":["Footer","Container","Row","Col","className","saveInStorage","key","data","localStorage","setItem","JSON","stringify","CartReducer","state","action","type","increasedIndex","cartItems","findIndex","item","_id","payload","size","quantity","sumItems","decreasedIndex","splice","find","currentProduct","addedIndex","push","image","price","name","product","removeIndex","shippingAddress","itemCount","reduce","count","total","sum","toFixed","StoreContext","createContext","savedUser","getItem","parse","StoreContextProvider","props","useState","products","setProducts","existUser","setExistUser","fetchProducts","a","axios","get","console","log","message","useEffect","Provider","value","fetchProductById","id","updateSavedUser","user","removeSavedUser","removeItem","children","CartContext","savedCartItems","savedShippingAddress","initialState","checkout","CartContextProvider","useReducer","dispatch","useContext","increase","decrease","addProduct","removeProduct","productInCart","p","addShipping","Header","Navbar","bg","variant","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","window","location","Rating","text","color","style","length","defaultProps","Product","Card","Img","src","Body","Title","as","Text","rating","numReviews","Paginator","itemsCount","pagesCount","currentPage","pageSize","onPageChange","pages","_","range","map","page","e","Number","Steps","step1","step2","step3","disabled","HomeScreen","searchKey","setSearchKey","setCurrentPage","items","setItems","setPageSize","setPagesCount","category","search","split","Math","ceil","slice","loadProducts","currentItems","filteredProducts","filter","toUpperCase","md","InputGroup","Prepend","FormControl","onChange","includes","brand","description","releaseDate","onSearch","target","placeholder","index","sm","lg","xl","Form","Control","offset","result","onPageSizeChange","ProductPage","match","params","setProduct","qty","setQty","setSize","qtyInSize","setQtyInSize","res","initSize","variants","initQtyInSize","fetchSingleProduct","Image","fluid","ListGroup","Date","toLocaleDateString","year","month","day","countInStock","selectedSize","sizeQty","parseInt","handleSelectSize","Array","keys","Button","Message","Alert","CartPage","alt","rounded","dir","history","FormContainer","xs","LoginPage","email","setEmail","password","setPassword","errorMsg","setErrorMsg","userExist","redirect","submitHandler","preventDefault","config","headers","post","response","userData","onSubmit","Group","controlId","Label","Register","setName","confirmPassword","setConfirmPassword","error","setError","handleRegister","Axios","Profile","errorMessage","setErrorMessage","token","patch","fecthedUser","fetchProfile","handleUpdate","updatedUser","ProtectedRoute","ShippingPage","country","setCountry","city","setCity","phoneNumber","setPhoneNumber","address","setAddress","customRounder","input","thousRound","round","tenRound","CreateOrderPage","paymentMethod","setPaymentMethod","itemsPrice","shippingPrice","taxPrice","totalPrice","createOrderHandler","orderItems","taxtPrice","createdOrder","Check","inline","label","Loader","Spinner","animation","role","width","height","margin","display","OrderPage","orderId","order","setOrder","loading","setLoading","fetchOrderById","postalCode","isDelivered","deliveredAt","isPaid","paidAt","App","Fragment","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ba30150a.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n   return (\n      <footer>\n         <Container>\n            <Row>\n               <Col className='text-center py-3'>© 2020 Sneaker City. All right reserved.</Col>\n            </Row>\n         </Container>\n      </footer>\n   );\n};\n\nexport default Footer;\n","export const saveInStorage = (key, data) => {\n   localStorage.setItem(`${key}`, JSON.stringify(data));\n};\n\nexport const getInStorage = (key, data) => {\n   const savedData = JSON.parse(localStorage.getItem(`${key}`));\n   return savedData;\n};\n\nexport const removeInStorage = (key, data) => {\n   localStorage.removeItem(`${key}`);\n};\n","import { saveInStorage } from '../utils/persistStorage';\n\nexport const CartReducer = (state, action) => {\n   switch (action.type) {\n      case 'INCREASE':\n         const increasedIndex = state.cartItems.findIndex(\n            (item) => item._id === action.payload._id && item.size === action.payload.size\n         );\n         state.cartItems[increasedIndex].quantity++;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n            ...sumItems(state.cartItems),\n         };\n      case 'DECREASE':\n         const decreasedIndex = state.cartItems.findIndex(\n            (item) => item._id === action.payload._id && item.size === action.payload.size\n         );\n         if (state.cartItems[decreasedIndex].quantity === 1) {\n            state.cartItems.splice(decreasedIndex, 1);\n         } else {\n            state.cartItems[decreasedIndex].quantity--;\n         }\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n            ...sumItems(state.cartItems),\n         };\n      case 'ADD_PRODUCT':\n         const exist = state.cartItems.find(\n            (item) =>\n               item._id === action.payload.currentProduct._id && item.size === action.payload.size\n         );\n         if (exist) {\n            const addedIndex = state.cartItems.findIndex(\n               (item) => item._id === action.payload.currentProduct._id\n            );\n            state.cartItems[addedIndex].quantity++;\n         } else {\n            state.cartItems.push({\n               _id: action.payload.currentProduct._id,\n               image: action.payload.currentProduct.image,\n               price: action.payload.currentProduct.price,\n               name: action.payload.currentProduct.name,\n               size: action.payload.size,\n               quantity: action.payload.quantity,\n               product: action.payload.currentProduct,\n            });\n         }\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n            ...sumItems(state.cartItems),\n         };\n      case 'REMOVE_PRODUCT':\n         const removeIndex = state.cartItems.findIndex(\n            (item) => item._id === action.payload._id && item.size === action.payload.size\n         );\n         state.cartItems.splice(removeIndex, 1);\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n            ...sumItems(state.cartItems),\n         };\n      case 'ADD_SHIPPING':\n         const shippingAddress = { ...action.payload };\n         saveInStorage('shippingAddress', shippingAddress);\n         return {\n            ...state,\n            shippingAddress,\n         };\n      default:\n         return {\n            ...state,\n         };\n   }\n};\n\nexport const sumItems = (cartItems) => {\n   saveInStorage('cart', cartItems);\n   let itemCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n   let total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);\n   return { itemCount, total };\n};\n","import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { saveInStorage, removeInStorage } from '../utils/persistStorage';\n\nexport const StoreContext = createContext();\n\nconst savedUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n\nexport const StoreContextProvider = (props) => {\n   const [products, setProducts] = useState([]);\n   const [existUser, setExistUser] = useState(savedUser);\n\n   const fetchProducts = async () => {\n      try {\n         const { data } = await axios.get('/api/products');\n         setProducts(data);\n      } catch (error) {\n         console.log(error.message);\n      }\n   };\n\n   const fetchProductById = (id) => {\n      return products.find((product) => product._id === id);\n   };\n\n   const updateSavedUser = (user) => {\n      setExistUser(user);\n      saveInStorage('user', user);\n   };\n\n   const removeSavedUser = (user) => {\n      removeInStorage('user', user);\n      setExistUser(null);\n   };\n\n   useEffect(() => {\n      fetchProducts();\n   }, []);\n\n   return (\n      <StoreContext.Provider\n         value={{\n            products,\n            fetchProducts,\n            fetchProductById,\n            existUser,\n            updateSavedUser,\n            removeSavedUser,\n         }}\n      >\n         {props.children}\n      </StoreContext.Provider>\n   );\n};\n","import React, { useContext, createContext, useReducer } from 'react';\nimport { CartReducer, sumItems } from './CartReducer';\nimport { StoreContext } from '../context/StoreContext';\n\nexport const CartContext = createContext();\n\nconst savedCartItems = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst savedShippingAddress = localStorage.getItem('shippingAddress')\n   ? JSON.parse(localStorage.getItem('shippingAddress'))\n   : {};\nconst initialState = {\n   cartItems: savedCartItems,\n   ...sumItems(savedCartItems),\n   shippingAddress: savedShippingAddress,\n   checkout: false,\n};\n\nexport const CartContextProvider = (props) => {\n   const [state, dispatch] = useReducer(CartReducer, initialState);\n   const { products } = useContext(StoreContext);\n\n   const increase = (payload) => {\n      console.log(payload);\n      dispatch({ type: 'INCREASE', payload });\n   };\n\n   const decrease = (payload) => {\n      dispatch({ type: 'DECREASE', payload });\n   };\n\n   const addProduct = (payload) => {\n      dispatch({ type: 'ADD_PRODUCT', payload });\n   };\n\n   const removeProduct = (payload) => {\n      dispatch({ type: 'REMOVE_PRODUCT', payload });\n   };\n   const addShipping = (payload) => {\n      dispatch({ type: 'ADD_SHIPPING', payload });\n   };\n\n   const productInCart = (id) => {\n      const cartProduct = products.find((p) => p._id === id);\n      return cartProduct;\n   };\n\n   return (\n      <CartContext.Provider\n         value={{\n            increase,\n            decrease,\n            addProduct,\n            removeProduct,\n            state,\n            productInCart,\n            addShipping,\n         }}\n      >\n         {props.children}\n      </CartContext.Provider>\n   );\n};\n","import React, { useContext } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\nimport { CartContext } from '../context/CartContext';\nimport { StoreContext } from '../context/StoreContext';\n\nconst Header = (props) => {\n   const { state } = useContext(CartContext);\n   const { existUser, removeSavedUser } = useContext(StoreContext);\n\n   const handleLogout = () => {\n      removeSavedUser(existUser);\n      window.location = '/';\n   };\n\n   return (\n      <header>\n         <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\n            <Container>\n               <LinkContainer to='/'>\n                  <Navbar.Brand>Sneaker City</Navbar.Brand>\n               </LinkContainer>\n               <Navbar.Toggle aria-controls='basic-navbar-nav' />\n               <Navbar.Collapse id='basic-navbar-nav'>\n                  <Nav className='mr-auto'>\n                     <LinkContainer to={`/home`}>\n                        <Nav.Link>All</Nav.Link>\n                     </LinkContainer>\n                     <LinkContainer to={`/home?category=women`}>\n                        <Nav.Link>Women</Nav.Link>\n                     </LinkContainer>\n                     <LinkContainer to={`/home?category=men`}>\n                        <Nav.Link>Men</Nav.Link>\n                     </LinkContainer>\n                  </Nav>\n                  <Nav className='ml-auto'>\n                     <LinkContainer to='/cart'>\n                        <Nav.Link>\n                           <i className='fas fa-shopping-cart'></i>\n                           {state.itemCount} Cart\n                        </Nav.Link>\n                     </LinkContainer>\n                     {existUser ? (\n                        <NavDropdown title={existUser.name} id='username'>\n                           <LinkContainer to='/profile'>\n                              <NavDropdown.Item>Profile</NavDropdown.Item>\n                           </LinkContainer>\n                           <NavDropdown.Item onClick={() => handleLogout()}>\n                              Logout\n                           </NavDropdown.Item>\n                        </NavDropdown>\n                     ) : (\n                        <LinkContainer to='/login'>\n                           <Nav.Link>\n                              <i className='fas fa-user'></i>\n                              Sign In\n                           </Nav.Link>\n                        </LinkContainer>\n                     )}\n                  </Nav>\n               </Navbar.Collapse>\n            </Container>\n         </Navbar>\n      </header>\n   );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rating = (props) => {\n   const { value, text, color } = props;\n   return (\n      <div className='rating'>\n         <span>\n            <i\n               className={\n                  value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'\n               }\n               style={{ color }}\n            />\n         </span>\n         <span>\n            <i\n               className={\n                  value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'\n               }\n               style={{ color }}\n            />\n         </span>\n         <span>\n            <i\n               className={\n                  value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'\n               }\n               style={{ color }}\n            />\n         </span>\n         <span>\n            <i\n               className={\n                  value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'\n               }\n               style={{ color }}\n            />\n         </span>\n         <span>\n            <i\n               className={\n                  value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'\n               }\n               style={{ color }}\n            />\n         </span>\n         <span className='px-1'>{text.length > 0 && text}</span>\n      </div>\n   );\n};\n\nRating.defaultProps = {\n   color: '#D48B19',\n   value: 0,\n};\n\nRating.propTypes = {\n   value: PropTypes.number.isRequired,\n   text: PropTypes.string.isRequired,\n   color: PropTypes.string,\n};\n\nexport default Rating;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\nconst Product = (props) => {\n   const { product } = props;\n   return (\n      <Card className='my-1 py-3 rounded'>\n         <Link to={`/product/${product._id}`}>\n            <Card.Img variant='top product-img' src={`${product.image}`} />\n         </Link>\n         <Card.Body>\n            <Card.Title as='div'>\n               <Link to={`/product/${product._id}`}>\n                  <p className='font-weight-normal'>{product.name}</p>\n               </Link>\n            </Card.Title>\n            <Card.Text as='div'>\n               <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n            </Card.Text>\n            <Card.Text as='h3' className='py-1'>\n               ${product.price}\n            </Card.Text>\n         </Card.Body>\n      </Card>\n   );\n};\n\nexport default Product;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst Paginator = ({ itemsCount, pagesCount, pageSize, currentPage, onPageChange }) => {\n   if (pagesCount === 1) return null;\n   const pages = _.range(1, pagesCount + 1);\n   console.log(pages);\n\n   return (\n      <nav>\n         <ul className='pagination'>\n            {pages.map((page) => (\n               <li key={page} className={page === currentPage ? 'page-item active' : 'page-item'}>\n                  <button className='page-link' onClick={(e) => onPageChange(page, e)}>\n                     {Number(page)}\n                  </button>\n               </li>\n            ))}\n         </ul>\n      </nav>\n   );\n};\n\nPaginator.propTypes = {\n   itemsCount: PropTypes.number.isRequired,\n   pageSize: PropTypes.number.isRequired,\n   currentPage: PropTypes.number.isRequired,\n   onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Paginator;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Steps = ({ step1, step2, step3 }) => {\n   return (\n      <Nav className='justify-content-center mb-4'>\n         <Nav.Item>\n            {step1 ? (\n               <LinkContainer to='/login'>\n                  <Nav.Link>Sign In</Nav.Link>\n               </LinkContainer>\n            ) : (\n               <Nav.Link disabled>Sign In</Nav.Link>\n            )}\n         </Nav.Item>\n\n         <Nav.Item>\n            {step2 ? (\n               <LinkContainer to='/shipping'>\n                  <Nav.Link>Shipping</Nav.Link>\n               </LinkContainer>\n            ) : (\n               <Nav.Link disabled>Shipping</Nav.Link>\n            )}\n         </Nav.Item>\n         <Nav.Item>\n            {step3 ? (\n               <LinkContainer to='/createorder'>\n                  <Nav.Link>Create Order</Nav.Link>\n               </LinkContainer>\n            ) : (\n               <Nav.Link disabled>Create Order</Nav.Link>\n            )}\n         </Nav.Item>\n      </Nav>\n   );\n};\n\nexport default Steps;\n","import React, { useContext, useState, useEffect } from 'react';\nimport Product from '../components/Product';\nimport { Row, Col, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport { StoreContext } from '../context/StoreContext';\nimport Paginator from '../components/Paginator';\nimport Steps from '../components/Steps';\n\nconst HomeScreen = (props) => {\n   const { products } = useContext(StoreContext);\n   const [searchKey, setSearchKey] = useState('');\n   const [currentPage, setCurrentPage] = useState(1);\n   const [items, setItems] = useState([]);\n   const [pageSize, setPageSize] = useState(10);\n   const [pagesCount, setPagesCount] = useState(0);\n   const { location } = props;\n\n   const category = location.search ? location.search.split('=')[1] : '';\n\n   useEffect(() => {\n      function loadProducts() {\n         const data = [...products];\n         setPagesCount(Math.ceil(products.length / 10));\n         setItems(data.slice(0, 10));\n      }\n      loadProducts();\n   }, [products]);\n\n   const onSearch = (key) => {\n      const value = key;\n      setSearchKey(value);\n      let currentItems = [...products];\n      if (category) {\n         currentItems = currentItems.filter((product) => {\n            return product.category.toUpperCase() === category.toUpperCase();\n         });\n      }\n      let filteredProducts = currentItems.filter((product) => {\n         return (\n            product.name.toUpperCase().includes(value.toUpperCase()) ||\n            product.brand.toUpperCase().includes(value.toUpperCase()) ||\n            product.description.toUpperCase().includes(value.toUpperCase()) ||\n            product.category.toUpperCase().includes(value.toUpperCase()) ||\n            product.releaseDate.toUpperCase().includes(value.toUpperCase())\n         );\n      });\n      setPagesCount(Math.ceil(filteredProducts.length / pageSize));\n      setItems(filteredProducts.slice(0, 0 + pageSize));\n   };\n\n   const onPageChange = (page) => {\n      let data = [...products];\n      let offset = (page - 1) * pageSize;\n      setCurrentPage(page);\n      const result = data.slice(offset, offset + pageSize);\n      setItems(result);\n      console.log(offset);\n      console.log(offset + pageSize);\n   };\n\n   const onPageSizeChange = (size) => {\n      let data = [...products];\n      let offset = (currentPage - 1) * size;\n      setPageSize(size);\n      const result = data.slice(offset, offset + size);\n      setPagesCount(Math.ceil(data.length / size));\n      setItems(result);\n      console.log(result);\n   };\n\n   const filterHandler = (key) => {\n      const value = key;\n      let currentItems = [...products];\n      let filteredProducts = [];\n      if (!value) {\n         filteredProducts = [...products];\n      } else {\n         filteredProducts = currentItems.filter((product) => {\n            return product.category.toUpperCase() === value.toUpperCase();\n         });\n      }\n      setPagesCount(Math.ceil(filteredProducts.length / pageSize));\n      if (filteredProducts.length !== items.length) {\n         setItems(filteredProducts.slice(0, pageSize));\n      }\n   };\n\n   useEffect(filterHandler, [category]);\n\n   return (\n      <div>\n         <h3>Latest Products - {category}</h3>\n         <Row className={'py-2'}>\n            <Col md={4}>\n               <InputGroup className='mb-2'>\n                  <InputGroup.Prepend>\n                     <InputGroup.Text>\n                        <i className='fas fa-search'></i>\n                     </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                     id='inlineFormInputGroup'\n                     value={searchKey}\n                     onChange={(e) => onSearch(e.target.value)}\n                     placeholder='Search'\n                  />\n               </InputGroup>\n            </Col>\n         </Row>\n         <Row>\n            {items.map((product, index) => (\n               <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                  <Product product={product} />\n               </Col>\n            ))}\n         </Row>\n         <Row className={'my-4'}>\n            <Col md={2}>\n               <Form.Control\n                  as='select'\n                  className={'select-pagination'}\n                  value={pageSize}\n                  onChange={(e) => onPageSizeChange(Number(e.target.value))}\n               >\n                  <option value={5}>5</option>\n                  <option value={10}>10</option>\n                  <option value={15}>15</option>\n                  <option value={20}>20</option>\n                  <option value={25}>25</option>\n               </Form.Control>\n            </Col>\n            <Col md={6}>\n               <Paginator\n                  itemsCount={products.length}\n                  pagesCount={pagesCount}\n                  pageSize={pageSize}\n                  currentPage={currentPage}\n                  onPageChange={onPageChange}\n               />\n            </Col>\n         </Row>\n      </div>\n   );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { CartContext } from '../context/CartContext';\nimport axios from 'axios';\n\nconst ProductPage = (props) => {\n   const { id } = props.match.params;\n   const [product, setProduct] = useState({});\n   const [qty, setQty] = useState(1);\n   const [size, setSize] = useState('');\n   const [qtyInSize, setQtyInSize] = useState(1);\n\n   const { addProduct } = useContext(CartContext);\n\n   const handleSelectSize = (selectedSize) => {\n      const sizeQty = product.variants.find((item) => item.size === selectedSize);\n      setSize(selectedSize);\n      if (sizeQty) setQtyInSize(parseInt(sizeQty.quantity));\n   };\n\n   const handleAddProduct = (currentProduct) => {\n      addProduct({ currentProduct, size, quantity: qty });\n   };\n\n   useEffect(() => {\n      const fetchSingleProduct = async () => {\n         const res = await axios.get(`/api/products/${id}`);\n         setProduct(res.data);\n         const initSize = res.data.variants[0].size;\n         const initQtyInSize = res.data.variants[0].quantity;\n         setSize(initSize);\n         setQtyInSize(initQtyInSize);\n      };\n      fetchSingleProduct();\n   }, [id]);\n\n   return (\n      <>\n         <Link className='btn btn-dark my-3' to='/home'>\n            Go Back\n         </Link>\n         <Row>\n            <Col md={6}>\n               <Image src={product.image} fluid />\n            </Col>\n            <Col md={3}>\n               <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                     <span className='lead'>{product.name}</span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                     <span className='h4'>{product.brand}</span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                     Released -\n                     <span>\n                        {new Date(`${product.releaseDate}`).toLocaleDateString('sq-AL', {\n                           year: 'numeric',\n                           month: '2-digit',\n                           day: '2-digit',\n                        })}\n                     </span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                     <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                  </ListGroup.Item>\n                  <ListGroup.Item className='h5'>Price: ${product.price}</ListGroup.Item>\n                  <ListGroup.Item>\n                     <span className='h5'>Description:</span>{' '}\n                     <span className='font-weight-lighter'>{product.description}</span>\n                  </ListGroup.Item>\n               </ListGroup>\n            </Col>\n            <Col md={3}>\n               <Card>\n                  <ListGroup variant='flush'>\n                     <ListGroup.Item>\n                        <Row>\n                           <Col>Price</Col>\n                           <Col>\n                              <strong>${product.price}</strong>\n                           </Col>\n                        </Row>\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                        <Row>\n                           <Col>Status</Col>\n                           <Col>\n                              <strong>\n                                 {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                              </strong>\n                           </Col>\n                        </Row>\n                     </ListGroup.Item>\n                     {product.countInStock > 0 && (\n                        <>\n                           <ListGroup.Item>\n                              <Row>\n                                 <Col>Size</Col>\n                                 <Col>\n                                    <Form.Control\n                                       as='select'\n                                       value={size}\n                                       onChange={(e) => handleSelectSize(e.target.value)}\n                                    >\n                                       {product.variants.map((item, index) => (\n                                          <option key={item._id} value={item.size}>\n                                             {item.size}\n                                          </option>\n                                       ))}\n                                    </Form.Control>\n                                 </Col>\n                              </Row>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                              <Row>\n                                 <Col>Qty</Col>\n                                 <Col>\n                                    <Form.Control\n                                       as='select'\n                                       value={qty}\n                                       onChange={(e) => setQty(parseInt(e.target.value))}\n                                    >\n                                       {[...Array(qtyInSize).keys()].map((item, index) => (\n                                          <option key={index + 1} value={index + 1}>\n                                             {index + 1}\n                                          </option>\n                                       ))}\n                                    </Form.Control>\n                                 </Col>\n                              </Row>\n                           </ListGroup.Item>\n                        </>\n                     )}\n                     <ListGroup.Item>\n                        <Button\n                           className='btn-block'\n                           type='button'\n                           disabled={product.countInStock === 0}\n                           onClick={() => handleAddProduct(product)}\n                        >\n                           Add to Cart\n                        </Button>\n                     </ListGroup.Item>\n                  </ListGroup>\n               </Card>\n            </Col>\n         </Row>\n      </>\n   );\n};\n\nexport default ProductPage;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, children }) => {\n   return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n   variant: 'info',\n};\n\nexport default Message;\n","import React, { useContext } from 'react';\nimport { CartContext } from '../context/CartContext';\nimport { Row, Col, ListGroup, Image, Button, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Message from '../components/Message';\n// import { StoreContext } from '../context/StoreContext';\n\nexport const CartPage = (props) => {\n   const { state, increase, decrease, removeProduct } = useContext(CartContext);\n   const { cartItems, itemCount, total } = state;\n\n   const handleIncrease = (id, size) => {\n      increase({ _id: id, size });\n   };\n\n   const handleDecrease = (id, size) => {\n      decrease({ _id: id, size });\n   };\n\n   const handleRemove = (id, size) => {\n      removeProduct({ _id: id, size });\n   };\n\n   const handleCheckout = () => {\n      console.dir(props);\n      props.history.push('/login?redirect=shipping');\n   };\n\n   return (\n      <div>\n         <Row>\n            <Col md={8}>\n               <h3>Shopping Cart</h3>\n               <hr />\n               {cartItems.length === 0 ? (\n                  <Message>\n                     Your cart is empty <Link to='/'>Go Back</Link>\n                  </Message>\n               ) : (\n                  <ListGroup variant='flush'>\n                     {cartItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                           <Row>\n                              <Col md={2}>\n                                 <Image src={item.image} alt={item.name} fluid rounded />\n                              </Col>\n                              <Col md={2}>\n                                 <Link to={`/product/${item._id}`}>{item.name}</Link>\n                              </Col>\n                              <Col md={2}>\n                                 ${item.price} x {item.quantity}\n                              </Col>\n                              <Col md={2}>\n                                 {item.size}\n                                 {'\"'}\n                              </Col>\n                              <Col md={4}>\n                                 <Button\n                                    type='button'\n                                    variant='light'\n                                    onClick={() => handleIncrease(item._id, item.size)}\n                                 >\n                                    <i className='fas fa-plus' />\n                                 </Button>\n                                 <Button\n                                    type='button'\n                                    variant='light'\n                                    onClick={() => handleDecrease(item._id, item.size)}\n                                 >\n                                    <i className='fas fa-minus' />\n                                 </Button>\n                                 <Button\n                                    type='button'\n                                    variant='light'\n                                    onClick={() => handleRemove(item._id, item.size)}\n                                 >\n                                    <i className='fas fa-trash' />\n                                 </Button>\n                              </Col>\n                              <Col md={2}></Col>\n                           </Row>\n                        </ListGroup.Item>\n                     ))}\n                  </ListGroup>\n               )}\n            </Col>\n            <Col md={4}>\n               <Card>\n                  <ListGroup variant='flush'>\n                     <ListGroup.Item>\n                        <h5>Subtotal </h5>\n                        <h6>Items - {itemCount}</h6>\n                        <h6>${total}</h6>\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                        <Button\n                           type='button'\n                           className='btn-block'\n                           disabled={cartItems.length === 0}\n                           onClick={() => handleCheckout()}\n                        >\n                           Checkout\n                        </Button>\n                     </ListGroup.Item>\n                  </ListGroup>\n               </Card>\n            </Col>\n         </Row>\n      </div>\n   );\n};\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport default function FormContainer({ children }) {\n   return (\n      <Container>\n         <Row className={'justify-content-md-center'}>\n            <Col xs={12} md={6}>\n               {children}\n            </Col>\n         </Row>\n      </Container>\n   );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport axios from 'axios';\nimport { getInStorage } from '../utils/persistStorage';\nimport Message from '../components/Message';\nimport { StoreContext } from '../context/StoreContext';\nimport Steps from '../components/Steps';\n\nexport const LoginPage = (props) => {\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n   const [errorMsg, setErrorMsg] = useState('');\n   const { updateSavedUser } = useContext(StoreContext);\n   const userExist = getInStorage('user');\n\n   const { location, history } = props;\n\n   const redirect = location.search ? location.search.split('=')[1] : '/';\n\n   useEffect(() => {\n      if (userExist) {\n         history.push(redirect);\n      }\n   }, [history, redirect, userExist]);\n\n   const submitHandler = async (e) => {\n      e.preventDefault();\n      try {\n         let config = {\n            headers: {\n               'Content-Type': 'application/json',\n            },\n         };\n         const response = await axios.post(\n            'api/users/login',\n            {\n               email,\n               password,\n            },\n            config\n         );\n         const userData = response.data;\n         updateSavedUser(userData);\n         history.push(`/${redirect}`);\n      } catch (error) {\n         const message =\n            error.response && error.response.data.message\n               ? error.response.data.message\n               : error.message;\n         setErrorMsg(message);\n      }\n   };\n\n   return (\n      <>\n         <Steps step1 />\n         <FormContainer>\n            <h3 className='my-5'>Sign In</h3>\n            {errorMsg && <Message variant='danger'>{errorMsg}</Message>}\n            <Form onSubmit={submitHandler}>\n               <Form.Group controlId='email'>\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                     type='email'\n                     placeholder='Enter email'\n                     value={email}\n                     onChange={(e) => setEmail(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Form.Group controlId='password'>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                     type='password'\n                     placeholder='Enter password'\n                     value={password}\n                     onChange={(e) => setPassword(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Button type='submit' variant='primary'>\n                  Sign In\n               </Button>\n               <Row className='py-3'>\n                  <Col>\n                     New User ?{' '}\n                     <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                     </Link>\n                  </Col>\n               </Row>\n            </Form>\n         </FormContainer>\n      </>\n   );\n};\n","import React, { useState, useContext } from 'react';\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Axios from 'axios';\nimport { StoreContext } from '../context/StoreContext';\n\nexport const Register = (props) => {\n   const [name, setName] = useState('');\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n   const [confirmPassword, setConfirmPassword] = useState('');\n   const [error, setError] = useState('');\n   const { updateSavedUser } = useContext(StoreContext);\n\n   console.log(props.location.search);\n\n   const handleRegister = async (e) => {\n      e.preventDefault();\n      if (!password || password === '') {\n         setError('Password cannot be empty');\n         return;\n      }\n      if (password !== confirmPassword) {\n         setError('Passwords do not match');\n         return;\n      }\n      try {\n         const response = await Axios.post('/api/users', { name, email, password });\n         const user = response.data;\n         updateSavedUser(user);\n         props.history.push('/cart');\n      } catch (error) {\n         console.error(error.message);\n         if (error.response.data) setError(error.response.data.message);\n         else setError(error.message);\n      }\n   };\n\n   return (\n      <FormContainer>\n         <Form onSubmit={handleRegister}>\n            <h3 className='my-5'>Sign In</h3>\n            {error && <Message variant='danger'>{error}</Message>}\n            <Form.Group controlId='name'>\n               <Form.Label>Full Name</Form.Label>\n               <Form.Control\n                  type='text'\n                  placeholder='Enter name'\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n               <Form.Label>Email Address</Form.Label>\n               <Form.Control\n                  type='email'\n                  placeholder='Enter email'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='password'>\n               <Form.Label>Password</Form.Label>\n               <Form.Control\n                  type='password'\n                  placeholder='Enter password'\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='confirm-password'>\n               <Form.Label>Confirm Password</Form.Label>\n               <Form.Control\n                  type='password'\n                  placeholder='Confirm password'\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Button type='submit' variant='primary'>\n               Register\n            </Button>\n         </Form>\n      </FormContainer>\n   );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { StoreContext } from '../context/StoreContext';\nimport axios from 'axios';\nimport Message from '../components/FormContainer';\n\nexport const Profile = (props) => {\n   const [name, setName] = useState('');\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n   const [confirmPassword, setConfirmPassword] = useState('');\n   const [errorMessage, setErrorMessage] = useState('');\n\n   const { existUser, updateSavedUser } = useContext(StoreContext);\n\n   useEffect(() => {\n      const fetchProfile = async () => {\n         try {\n            let config = {\n               headers: {\n                  'Authorization': `Bearer ${existUser.token}`,\n                  'Content-Type': 'application/json',\n               },\n            };\n            const response = await axios.patch('/api/users', { name, email, password }, config);\n            const fecthedUser = response.data;\n            setName(fecthedUser.name);\n            setEmail(fecthedUser.email);\n         } catch (error) {\n            if (error.response.data) {\n               setErrorMessage(error.response.data.message);\n            } else setErrorMessage(error.message);\n         }\n      };\n      fetchProfile();\n   });\n\n   const handleUpdate = async (e) => {\n      e.preventDefault();\n      try {\n         let config = {\n            headers: {\n               'Authorization': `Bearer ${existUser.token}`,\n               'Content-Type': 'application/json',\n            },\n         };\n         const response = await axios.patch('/api/users', { name, email, password }, config);\n         const updatedUser = response.data;\n         updateSavedUser(updatedUser);\n      } catch (error) {\n         if (error.response.data) setErrorMessage(error.response.data.message);\n         else setErrorMessage(error.message);\n      }\n   };\n\n   return (\n      <Row>\n         <Col md={4}>\n            <Form onSubmit={handleUpdate}>\n               <h3 className='my-5'>Sign In</h3>\n               {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n               <Form.Group controlId='name'>\n                  <Form.Label>Full Name</Form.Label>\n                  <Form.Control\n                     type='text'\n                     placeholder='Enter name'\n                     value={name}\n                     onChange={(e) => setName(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Form.Group controlId='email'>\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                     type='email'\n                     placeholder='Enter email'\n                     value={email}\n                     onChange={(e) => setEmail(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Form.Group controlId='password'>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                     type='password'\n                     placeholder='Enter password'\n                     value={password}\n                     onChange={(e) => setPassword(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Form.Group controlId='confirm-password'>\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                     type='password'\n                     placeholder='Confirm password'\n                     value={confirmPassword}\n                     onChange={(e) => setConfirmPassword(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Button type='submit' variant='primary'>\n                  Update\n               </Button>\n            </Form>\n         </Col>\n         <Col md={8}>\n            <h3 className='my-5'>Orders</h3>\n         </Col>\n      </Row>\n   );\n};\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { StoreContext } from '../context/StoreContext';\n\nconst ProtectedRoute = (props) => {\n   const { existUser } = useContext(StoreContext);\n\n   if (!existUser) {\n      return <Redirect to='/login' />;\n   } else {\n      return <Route {...props} />;\n   }\n};\n\nexport default ProtectedRoute;\n","import React, { useState, useContext, useEffect } from 'react';\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\n// import Axios from 'axios';\n// import { StoreContext } from '../context/StoreContext';\nimport { CartContext } from '../context/CartContext';\nimport Steps from '../components/Steps';\n\nexport const ShippingPage = (props) => {\n   const [country, setCountry] = useState('');\n   const [city, setCity] = useState('');\n   const [phoneNumber, setPhoneNumber] = useState('');\n   const [address, setAddress] = useState('');\n   const [email, setEmail] = useState('');\n   const [errorMsg, setErrorMsg] = useState('');\n   const { addShipping, state } = useContext(CartContext);\n   const { shippingAddress } = state;\n\n   useEffect(() => {\n      if (shippingAddress) {\n         setCountry(shippingAddress.country);\n         setCity(shippingAddress.city);\n         setPhoneNumber(shippingAddress.phoneNumber);\n         setEmail(shippingAddress.email);\n         setAddress(shippingAddress.address);\n      }\n   }, [shippingAddress]);\n\n   const { history } = props;\n\n   const addShippingHandler = (e) => {\n      e.preventDefault();\n      if (country && city && email && phoneNumber && address) {\n         addShipping({\n            country,\n            city,\n            email,\n            phoneNumber,\n            address,\n         });\n         history.push('/createorder');\n      } else {\n         setErrorMsg('One or more empty field(s)');\n      }\n   };\n   return (\n      <div>\n         <Steps step1 step2 />\n         <FormContainer>\n            <h3 className='my-5'>Delivery Address</h3>\n            {errorMsg && <Message variant='danger'>{errorMsg}</Message>}\n            <Form onSubmit={addShippingHandler}>\n               <Form.Group controlId='countryId'>\n                  <Form.Label>Country</Form.Label>\n                  <Form.Control\n                     type='text'\n                     placeholder='Enter your country'\n                     value={country}\n                     onChange={(e) => setCountry(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Form.Group controlId='cityId'>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                     type='text'\n                     placeholder='Enter your city'\n                     value={city}\n                     onChange={(e) => setCity(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Form.Group controlId='emailId'>\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                     type='email'\n                     placeholder='Enter your email address'\n                     value={email}\n                     onChange={(e) => setEmail(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Form.Group controlId='phoneNumberId'>\n                  <Form.Label>Phone number</Form.Label>\n                  <Form.Control\n                     type='text'\n                     placeholder='Enter your phone number'\n                     value={phoneNumber}\n                     onChange={(e) => setPhoneNumber(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Form.Group controlId='addressId'>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                     type='text'\n                     placeholder='Enter your address'\n                     value={address}\n                     onChange={(e) => setAddress(e.target.value)}\n                  ></Form.Control>\n               </Form.Group>\n               <Button type='submit' variant='primary'>\n                  Next\n               </Button>\n            </Form>\n         </FormContainer>\n      </div>\n   );\n};\n","import { format, parse } from 'date-fns';\n\nexport const formatNumber = (input) => {\n   if (!input) {\n      return 0;\n   }\n   return new Intl.NumberFormat('en-US', {}).format(input);\n};\n\nexport const customRounder = (input) => {\n   let thousRound = Math.round(input * 100) / 100;\n   let tenRound = Math.round(thousRound * 10) / 10;\n   let result = Math.round(tenRound);\n   return result;\n};\n\nexport const formatReceiptDateTime = (input) => {\n   if (input) {\n      let inputDate = parse(input, 'yyyy-MM-dd HH:mm:ss', new Date());\n      return format(inputDate, 'MMM dd,yyyy - HH:mm:ss');\n   }\n   return;\n};\n","import React, { useState, useContext } from 'react';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { CartContext } from '../context/CartContext';\nimport { StoreContext } from '../context/StoreContext';\nimport Steps from '../components/Steps';\nimport { customRounder } from '../utils/Formater';\nimport axios from 'axios';\n\nexport const CreateOrderPage = (props) => {\n   const { state } = useContext(CartContext);\n   const { cartItems, shippingAddress, total, itemCount } = state;\n   const [errorMsg, setErrorMsg] = useState('');\n   const [paymentMethod, setPaymentMethod] = useState('');\n   const { existUser } = useContext(StoreContext);\n   const { history } = props;\n\n   state.itemsPrice = total;\n   state.shippingPrice = total > 150 ? 0 : 85;\n   state.taxPrice = customRounder(Number(0.15 * total));\n   state.totalPrice = customRounder(Number(state.shippingPrice + state.taxPrice) + Number(total));\n\n   const createOrderHandler = async (e) => {\n      e.preventDefault();\n      const data = {\n         orderItems: cartItems,\n         shippingAddress: shippingAddress,\n         paymentMethod: paymentMethod,\n         quantity: itemCount,\n         itemsPrice: state.itemsPrice,\n         taxtPrice: state.taxPrice,\n         shippingPrice: state.shippingPrice,\n         totalPrice: state.totalPrice,\n      };\n      try {\n         let config = {\n            headers: {\n               'Authorization': `Bearer ${existUser.token}`,\n               'Content-Type': 'application/json',\n            },\n         };\n         const response = await axios.post('/api/orders', data, config);\n         const createdOrder = await response.data;\n         console.dir(createdOrder);\n         setErrorMsg('');\n         history.push(`/order/${createdOrder._id}`);\n      } catch (error) {\n         const message =\n            error.response && error.response.data.message\n               ? error.response.data.message\n               : error.message;\n         setErrorMsg(message);\n      }\n   };\n\n   return (\n      <>\n         <Steps step1 step2 step3 />\n         <Form onSubmit={createOrderHandler}>\n            <Row>\n               <Col md={8}>\n                  <ListGroup variant='flush'>\n                     <ListGroup.Item>\n                        <h4>Payment Method</h4>\n\n                        <Form.Group>\n                           <Col md={5}>\n                              <Form.Check\n                                 inline\n                                 label='Paypal or Credit Card'\n                                 name='paymentMethod'\n                                 type='radio'\n                                 id='paypal'\n                                 value='PayPal'\n                                 onChange={(e) => setPaymentMethod(e.target.value)}\n                              />\n                              <Form.Check\n                                 inline\n                                 label='Stripe'\n                                 name='paymentMethod'\n                                 type='radio'\n                                 id='stripe'\n                                 value='Stripe'\n                                 disabled\n                              />\n                           </Col>\n                        </Form.Group>\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                        <h4>Shipping Address</h4>\n                        <p>\n                           <strong>Address:</strong>\n                           {shippingAddress.address},{shippingAddress.city}\n                           <br />\n                           {shippingAddress.email}, {shippingAddress.country}\n                        </p>\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                        <h4>Order Items</h4>\n                        {cartItems.length === 0 ? (\n                           <Message>Your cart is empty</Message>\n                        ) : (\n                           <>\n                              <ListGroup variant='flush'>\n                                 {cartItems.map((item, index) => (\n                                    <ListGroup.Item key={index}>\n                                       <Row>\n                                          <Col md={1}>\n                                             <Image\n                                                src={item.image}\n                                                alt={item.name}\n                                                fluid\n                                                rounded\n                                             />\n                                          </Col>\n                                          <Col>\n                                             <Link to={`/product/${item._id}`}>{item.name}</Link>\n                                          </Col>\n                                          <Col md={1}>\n                                             {item.size}\n                                             {'\"'}\n                                          </Col>\n                                          <Col md={4}>\n                                             {item.quantity} x ${item.price} = $\n                                             {item.quantity * item.price}\n                                          </Col>\n                                       </Row>\n                                    </ListGroup.Item>\n                                 ))}\n                              </ListGroup>\n                           </>\n                        )}\n                     </ListGroup.Item>\n                  </ListGroup>\n               </Col>\n               <Col md={4}>\n                  <Card>\n                     <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                           <h2>Order Summary</h2>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                           <Row>\n                              <Col>Items({itemCount})</Col>\n                              <Col>${state.itemsPrice}</Col>\n                           </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                           <Row>\n                              <Col>Shipping</Col>\n                              <Col>${state.shippingPrice}</Col>\n                           </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                           <Row>\n                              <Col>Tax</Col>\n                              <Col>${state.taxPrice}</Col>\n                           </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                           <Row>\n                              <Col>Total</Col>\n                              <Col>${state.totalPrice}</Col>\n                           </Row>\n                        </ListGroup.Item>\n                        {errorMsg && (\n                           <ListGroup.Item>\n                              <Message variant='danger'>{errorMsg}</Message>\n                           </ListGroup.Item>\n                        )}\n                        <ListGroup.Item>\n                           <Button type='submit' className='btn-block' disabled={cartItems === 0}>\n                              Create Order\n                           </Button>\n                        </ListGroup.Item>\n                     </ListGroup>\n                  </Card>\n               </Col>\n            </Row>\n         </Form>\n      </>\n   );\n};\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nexport const Loader = () => {\n   return (\n      <>\n         <Spinner\n            animation='border'\n            role='status'\n            style={{\n               width: '160px',\n               height: '160px',\n               margin: 'auto',\n               display: 'block',\n            }}\n         />\n      </>\n   );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { customRounder } from '../utils/Formater';\nimport { StoreContext } from '../context/StoreContext';\nimport Message from '../components/Message';\nimport axios from 'axios';\nimport { Loader } from '../components/Loader';\n\nexport const OrderPage = ({ match, history }) => {\n   const orderId = match.params.id;\n   const [order, setOrder] = useState({});\n   const [loading, setLoading] = useState(true);\n   const [errorMsg, setErrorMsg] = useState('');\n   const { existUser } = useContext(StoreContext);\n\n   useEffect(() => {\n      async function fetchOrderById() {\n         try {\n            let config = {\n               headers: {\n                  'Authorization': `Bearer ${existUser.token}`,\n                  'Content-Type': 'application/json',\n               },\n            };\n            const { data } = await axios.get(`/api/orders/${orderId}`, config);\n            console.dir(data);\n            setOrder(data);\n            setLoading(false);\n         } catch (error) {\n            const message =\n               error.response && error.response.data.message\n                  ? error.response.data.message\n                  : error.message;\n            setErrorMsg(message);\n         }\n      }\n      fetchOrderById();\n      // eslint-disable-next-line\n   }, []);\n\n   return (\n      <>\n         {loading === true ? (\n            <Loader />\n         ) : (\n            <>\n               <h3>Order # {orderId}</h3>\n               <Row>\n                  <Col md={8}>\n                     <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                           <h4>Shipping</h4>\n                           <p>\n                              <strong>Names: </strong>\n                              {order.user.name}\n                           </p>\n                           <p>\n                              <strong>Email: </strong> {order.user && order.user.email}\n                           </p>\n                           {order.shippingAddress && (\n                              <p>\n                                 <strong>Address:</strong>\n                                 {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                                 {order.shippingAddress.postalCode}, {order.shippingAddress.country}\n                              </p>\n                           )}\n                           {order.isDelivered ? (\n                              <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                           ) : (\n                              <Message variant='danger'>Not Delivered</Message>\n                           )}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                           <h4>Payment Method</h4>\n                           <p>{order.paymentMethod}</p>\n                           {order.isPaid ? (\n                              <Message variant='success'>Paind on {order.paidAt}</Message>\n                           ) : (\n                              <Message variant='danger'>Not paid</Message>\n                           )}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                           <h4>Order Items</h4>\n                           {order.orderItems.length === 0 ? (\n                              <Message>Order is empty</Message>\n                           ) : (\n                              <ListGroup variant='flus'>\n                                 {order.orderItems.map((item, index) => (\n                                    <ListGroup.Item key={index}>\n                                       <Row>\n                                          <Col md={1}>\n                                             <Image\n                                                src={item.image}\n                                                alt={item.name}\n                                                fluid\n                                                rounded\n                                             />\n                                          </Col>\n                                          <Col>\n                                             <Link to={`/product/${item._id}`}>{item.name}</Link>\n                                          </Col>\n                                          <Col md={1}>\n                                             {item.size}\n                                             {'\"'}\n                                          </Col>\n                                          <Col md={4}>\n                                             {item.quantity} x ${item.price} = $\n                                             {item.quantity * item.price}\n                                          </Col>\n                                       </Row>\n                                    </ListGroup.Item>\n                                 ))}\n                              </ListGroup>\n                           )}\n                        </ListGroup.Item>\n                     </ListGroup>\n                  </Col>\n                  <Col md={4}></Col>\n               </Row>\n            </>\n         )}\n      </>\n   );\n};\n","import React from 'react';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeScreen from './pages/HomePage';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport ProductPage from './pages/ProductPage';\nimport { StoreContextProvider } from './context/StoreContext';\nimport { CartContextProvider } from './context/CartContext';\nimport { CartPage } from './pages/CartPage';\nimport { LoginPage } from './pages/LoginPage';\nimport { Register } from './pages/Register';\nimport { Profile } from './pages/Profile';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { ShippingPage } from './pages/ShippingPage';\nimport { CreateOrderPage } from './pages/CreateOrderPage';\nimport { OrderPage } from './pages/OrderPage';\n\nconst App = () => {\n   return (\n      <React.Fragment>\n         <StoreContextProvider>\n            <CartContextProvider>\n               <Header />\n               <Container>\n                  <main className='py-3'>\n                     <Switch>\n                        <Route path={'/'} exact component={HomeScreen} />\n                        <Route path={'/home'} component={HomeScreen} />\n                        <Route path='/login' component={LoginPage} />\n                        <ProtectedRoute path='/profile' component={Profile} />\n                        <ProtectedRoute path='/shipping' component={ShippingPage} />\n                        <ProtectedRoute path='/createorder' component={CreateOrderPage} />\n                        <ProtectedRoute path='/order/:id' component={OrderPage} />\n                        <Route path={'/register'} component={Register} />\n                        <Route path={'/product/:id'} component={ProductPage} />\n                        <Route path={'/cart'} component={CartPage} />\n                     </Switch>\n                  </main>\n               </Container>\n               <Footer />\n            </CartContextProvider>\n         </StoreContextProvider>\n      </React.Fragment>\n   );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n   <Router>\n      <App />\n   </Router>,\n   document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}